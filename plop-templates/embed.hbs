import {{capitalizeName}} from './{{componentName}}.svelte';
import { type ConfigProps } from './types';

let {{componentName}}Initialized = false;
let div = document.getElementById('{{componentName}}-root');

function {{componentName}}Start(config: ConfigProps) {
	if ({{componentName}}Initialized) {
		console.warn('{{componentName}} is already initialized.');
		return;
	}

	// Create a div element only if it doesn't already exist
	if (!div) {
		div = document.createElement('div');
		div.id = '{{componentName}}-root';
		document.body.appendChild(div);
	}

	try {
		// Instantiate the {{componentName}} component with configurations
		new {{capitalizeName}}({
			target: div,
			props: config ? { config } : {}
		});
		{{componentName}}Initialized = true;
	} catch (error) {
		console.error('Failed to initialize {{componentName}}:', error);
	}
}

function {{componentName}}Stop() {
	if (div) {
		div.remove();
		{{componentName}}Initialized = false;
	}
}

type CustomWindow = Window & { {{componentName}}Start: (config: ConfigProps) => void; {{componentName}}Stop: () => void };

// Expose the function globally
(window as unknown as CustomWindow).{{componentName}}Start = {{componentName}}Start;
(window as unknown as CustomWindow).{{componentName}}Stop = {{componentName}}Stop;
